#include <bits/stdc++.h>
using namespace std;

#define INFINITY 9999

void dijkstra(int G[50][50], int n, int startnode, int last){
    int cost[50][50], distance[50], pred[50];
    int visited[50], count, mindistance, nextnode, i, j;
    
    for(i=0; i<n; i++){
        for(int j=0; j<n; j++){
            if(G[i][j] == 0){
                cost[i][j] = INFINITY;
            }
            else{
                cost[i][j] = G[i][j];
            }
        }
    }

    for(i=0; i<n; i++){
        distance[i] = cost[startnode][i];
        pred[i] = startnode;
        visited[i] = 0;
    }

    distance[startnode] = 0;
    visited[startnode] = 1; 
    count = 1;

    while(count < n-1){
        mindistance = INFINITY;

        for(i=0; i<n; i++){
            if(distance[i] < mindistance && !visited[i]){
                mindistance = distance[i];
                nextnode = i;
            }
        }

        visited[nextnode] = 1;
        for(i=0; i<n; i++){
            if(!visited[i]){
                if(mindistance + cost[nextnode][i] < distance[i]){
                    distance[i] = mindistance + cost[nextnode][i];
                    pred[i] = nextnode;
                }
                count++;

            }
        }

        for(i=0; i<n; i++){
            if(i!=startnode && i==last){
                cout<<"\nShortest distance "<<startnode<<" to "<<i<<" = "<<distance[i];
                cout<<"\nShortest Path = "<<i;
                j=i;
                do{
                    j = pred[j];
                    cout<<"<-"<<j;                
                }while(j != startnode);
            }
        }

    }
}

int main(){
    int G[50][50], i, j, n, u, v;
    cout<<"Enter no. of vertices: ";
    cin>>n;

    cout<<"Enter the adjacency matrix: \n";
    for(i=1; i<=n; i++){
        for(j=1; j<=n; j++){
            cin>>G[i][j];
        }
    }
    cout<<endl<<"Graph Is \n";

    for(i=1; i<=n; i++){
        for(j=1; j<=n; j++){
            cout<<"   "<<G[i][j];
            cout<<endl;
        }
    }

    cout<<"\nEnter the starting node: ";
    cin>>u;
    cout<<"\nEnter the last vertex: ";
    cin>>v;

    dijkstra(G, n, u, v);

    return 0;
}




